# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-10 11:09
from __future__ import unicode_literals

import apps.profile.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authtoken', '0002_auto_20160226_1747'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='date create')),
                ('date_last_modify', models.DateTimeField(auto_now=True, verbose_name='date last modify')),
                ('status', models.IntegerField(choices=[(0, 'disable'), (1, 'enable')], default=1, null=True, verbose_name='status')),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('brand', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='brand')),
                ('ssn', models.CharField(blank=True, db_index=True, max_length=16, verbose_name='ssn')),
                ('vat_number', models.CharField(blank=True, db_index=True, max_length=14, verbose_name='vat number')),
                ('url', models.URLField(blank=True, max_length=255, verbose_name='url')),
                ('email', models.EmailField(blank=True, max_length=100, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('phone2', models.CharField(blank=True, max_length=20, verbose_name='phone2')),
                ('fax', models.CharField(blank=True, max_length=20, verbose_name='fax')),
                ('logo', models.ImageField(blank=True, upload_to=apps.profile.models.get_upload_logo_path, verbose_name='logo')),
                ('note', models.TextField(blank=True, verbose_name='note')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_company_creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name': 'company',
                'permissions': (('list_company', 'can list company'), ('detail_company', 'can detail company'), ('disable_company', 'can disable company')),
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Favourite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='date create')),
                ('date_last_modify', models.DateTimeField(auto_now=True, verbose_name='date last modify')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to='profile.Company', verbose_name='company')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_favourite_creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('last_modifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_favourite_last_modifier', to=settings.AUTH_USER_MODEL, verbose_name='last modifier')),
            ],
            options={
                'verbose_name': 'favourite',
                'permissions': (('list_favourite', 'can list favourite'), ('detail_favourite', 'can detail favourite')),
                'verbose_name_plural': 'favourites',
            },
        ),
        migrations.CreateModel(
            name='Partnership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='date create')),
                ('date_last_modify', models.DateTimeField(auto_now=True, verbose_name='date last modify')),
                ('invitation_date', models.DateTimeField(auto_now_add=True, verbose_name='invitation date')),
                ('approval_date', models.DateTimeField(blank=True, null=True, verbose_name='approval date')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_partnership_creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('guest_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_partnerships', to='profile.Company', verbose_name='receipt company')),
                ('inviting_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_partnerships', to='profile.Company', verbose_name='invite company')),
                ('last_modifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_partnership_last_modifier', to=settings.AUTH_USER_MODEL, verbose_name='last modifier')),
            ],
            options={
                'verbose_name': 'partnership',
                'permissions': (('list_partnership', 'can list partnership'), ('detail_partnership', 'can detail partnership')),
                'verbose_name_plural': 'partnerships',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='date create')),
                ('date_last_modify', models.DateTimeField(auto_now=True, verbose_name='date last modify')),
                ('status', models.IntegerField(choices=[(0, 'disable'), (1, 'enable')], default=1, null=True, verbose_name='status')),
                ('ordering', models.IntegerField(default=0, verbose_name='ordering')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('language', models.CharField(choices=[('it', 'italian'), ('en', 'english')], max_length=2)),
                ('role', models.CharField(choices=[('o', 'owner'), ('d', 'delegate'), ('m', 'level 1'), ('w', 'level 2')], max_length=1, verbose_name='role')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=64, verbose_name='phone')),
                ('fax', models.CharField(blank=True, max_length=64, verbose_name='fax')),
                ('mobile', models.CharField(blank=True, max_length=64, verbose_name='mobile')),
                ('note', models.TextField(blank=True, verbose_name='note')),
                ('photo', models.ImageField(blank=True, upload_to=apps.profile.models.get_upload_photo_path, verbose_name='image')),
                ('profile_invitation_date', models.DateTimeField(blank=True, null=True, verbose_name='profile invitation date')),
                ('company_invitation_date', models.DateTimeField(blank=True, null=True, verbose_name='company invitation date')),
                ('approval_date', models.DateTimeField(blank=True, null=True, verbose_name='invitation approval date')),
                ('info', django.contrib.postgres.fields.jsonb.JSONField(default=apps.profile.models.profile_info_default, help_text='More information about profile', verbose_name='info')),
                ('company', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='profile.Company', verbose_name='company')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_profile_creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('last_modifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_profile_last_modifier', to=settings.AUTH_USER_MODEL, verbose_name='last modifier')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'profile',
                'permissions': (('list_profile', 'can list profile'), ('detail_profile', 'can detail profile'), ('disable_profile', 'can disable profile')),
                'verbose_name_plural': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='date create')),
                ('date_last_modify', models.DateTimeField(auto_now=True, verbose_name='date last modify')),
                ('role', models.CharField(choices=[('o', 'owner'), ('d', 'delegate'), ('m', 'level 1'), ('w', 'level 2')], help_text='User role w.r.t. company', max_length=1, verbose_name='role')),
                ('info', django.contrib.postgres.fields.jsonb.JSONField(default=apps.profile.models.tracking_info_default, help_text='More information about this tracking', verbose_name='info')),
                ('company', models.ForeignKey(help_text='Tracking company', on_delete=django.db.models.deletion.CASCADE, related_name='trackings', to='profile.Company', verbose_name='company')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_tracking_creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('last_modifier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_tracking_last_modifier', to=settings.AUTH_USER_MODEL, verbose_name='last modifier')),
                ('token', models.OneToOneField(help_text='Tracking token', on_delete=django.db.models.deletion.CASCADE, related_name='tracking', to='authtoken.Token', verbose_name='token')),
            ],
            options={
                'verbose_name': 'tracking',
                'permissions': (('list_tracking', 'can list tracking'), ('detail_tracking', 'can detail tracking')),
                'verbose_name_plural': 'trackings',
            },
        ),
        migrations.AddField(
            model_name='favourite',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to='profile.Profile', verbose_name='contact'),
        ),
        migrations.AddField(
            model_name='company',
            name='followers',
            field=models.ManyToManyField(related_name='followings', through='profile.Favourite', to='profile.Profile', verbose_name='followers'),
        ),
        migrations.AddField(
            model_name='company',
            name='last_modifier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_company_last_modifier', to=settings.AUTH_USER_MODEL, verbose_name='last modifier'),
        ),
        migrations.AddField(
            model_name='company',
            name='members',
            field=models.ManyToManyField(related_name='employers', to='profile.Profile', verbose_name='members'),
        ),
        migrations.AlterUniqueTogether(
            name='favourite',
            unique_together=set([('profile', 'company')]),
        ),
    ]
